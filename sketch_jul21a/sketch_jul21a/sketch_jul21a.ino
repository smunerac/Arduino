#include <SoftwareSerial.h>const int pin1motor1=48;const int pin2motor1=49;const int pin3motor1=8;const int pin1motor2=24;const int pin2motor2=25;const int pin3motor2=3;const int pin1motor3=26;const int pin2motor3=27;const int pin3motor3=4;const int pin1motor4=28;const int pin2motor4=29;const int pin3motor4=5;int pwm1=250;int pwm2=250;//int pwm3=250;SoftwareSerial blue(10,11);void setup() {  Serial.begin(57600);   blue.begin(9600);    pinMode(pin1motor1, OUTPUT);  pinMode(pin2motor1, OUTPUT);  pinMode(pin3motor1, OUTPUT);  pinMode(pin1motor2, OUTPUT);    pinMode(pin2motor2, OUTPUT);   pinMode(pin3motor2, OUTPUT);    pinMode(pin1motor3, OUTPUT);  pinMode(pin2motor3, OUTPUT);  pinMode(pin3motor3, OUTPUT);    pinMode(pin1motor4, OUTPUT);    pinMode(pin2motor4, OUTPUT);    pinMode(pin3motor4, OUTPUT);}void loop() {    // see if there's incoming serial data:  if (blue.available() > 0) {    // read the oldest byte in the serial buffer:    int comando = blue.read();        // action depending on the instruction    // as well as sending a confirmation back to the app    switch (comando) {      case 'A':        //lcd.print("Going forward");        Serial.println("A");  digitalWrite(pin1motor1, LOW);  digitalWrite(pin2motor1, HIGH);  digitalWrite(pin3motor1, pwm1);  digitalWrite(pin1motor2, LOW);  digitalWrite(pin2motor2, HIGH);  digitalWrite(pin3motor2, pwm2);    digitalWrite(pin1motor3, LOW);    digitalWrite(pin2motor3, HIGH);    digitalWrite(pin3motor3, pwm1);  digitalWrite(pin1motor4, LOW);  digitalWrite(pin2motor4, HIGH);  digitalWrite(pin3motor4, pwm2); // adelante();        break;}}}